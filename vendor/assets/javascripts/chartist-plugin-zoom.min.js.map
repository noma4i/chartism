{"version":3,"sources":["chartist-plugin-zoom.js"],"names":["root","factory","define","amd","returnExportsGlobal","exports","module","this","window","document","Chartist","hide","rect","attr","style","show","getRect","firstPoint","secondPoint","x","y","width","height","position","event","svg","layerX","layerY","transform","svgElement","screen","tagName","ownerSVGElement","matrix","getScreenCTM","getCTM","point","createSVGPoint","matrixTransform","inverse","project","value","axis","max","bounds","min","scale","type","base","Math","pow","baseLog","axisLength","range","val","log","defaultOptions","plugins","zoom","options","extend","chart","copyTouch","touch","p","pageX","pageY","id","identifier","ongoingTouchIndexById","idToFind","i","ongoingTouches","length","onTouchStart","preventDefault","touches","changedTouches","push","onTouchMove","idx","splice","onTouchCancel","removeTouches","onTouchEnd","zoomIn","onMouseDown","button","downPosition","onMouseUp","box","resetOnRightMouseBtn","reset","x1","chartRect","x2","y2","y1","axisX","highLow","low","high","axisY","update","data","onZoom","onMouseMove","Line","on","element","clip-path","_node","elem","defs","querySelector","fill","addEventListener"],"mappings":"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","file":"chartist-plugin-zoom.min.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function () {\n      return (root.returnExportsGlobal = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist.plugins.zoom'] = factory();\n  }\n}(this, function () {\n\n  /**\r\n   * Chartist.js zoom plugin.\r\n   *\r\n   */\r\n  (function (window, document, Chartist) {\r\n    'use strict';\r\n\r\n    var defaultOptions = {\r\n      // onZoom\r\n      // resetOnRightMouseBtn\r\n    };\r\n\r\n\r\n    Chartist.plugins = Chartist.plugins || {};\r\n    Chartist.plugins.zoom = function (options) {\r\n\r\n      options = Chartist.extend({}, defaultOptions, options);\r\n\r\n      return function zoom(chart) {\r\n\r\n        if (!(chart instanceof Chartist.Line)) {\r\n          return;\r\n        }\r\n\r\n        var rect, svg, axisX, axisY, chartRect;\r\n        var downPosition;\r\n        var onZoom = options.onZoom;\r\n        var ongoingTouches = [];\r\n\r\n        chart.on('draw', function (data) {\r\n          var type = data.type;\r\n          if (type === 'line' || type === 'bar' || type === 'area' || type === 'point') {\r\n            data.element.attr({\r\n              'clip-path': 'url(#zoom-mask)'\r\n            });\r\n          }\r\n        });\r\n\r\n        chart.on('created', function (data) {\r\n          axisX = data.axisX;\r\n          axisY = data.axisY;\r\n          chartRect = data.chartRect;\r\n          svg = data.svg._node;\r\n          rect = data.svg.elem('rect', {\r\n            x: 10,\r\n            y: 10,\r\n            width: 100,\r\n            height: 100,\r\n          }, 'ct-zoom-rect');\r\n          hide(rect);\r\n\r\n          var defs = data.svg.querySelector('defs') || data.svg.elem('defs');\r\n          var width = chartRect.width();\r\n          var height = chartRect.height();\r\n\r\n          defs\r\n            .elem('clipPath', {\r\n              id: 'zoom-mask'\r\n            })\r\n            .elem('rect', {\r\n              x: chartRect.x1,\r\n              y: chartRect.y2,\r\n              width: width,\r\n              height: height,\r\n              fill: 'white'\r\n            });\r\n\r\n          svg.addEventListener('mousedown', onMouseDown);\r\n          svg.addEventListener('mouseup', onMouseUp);\r\n          svg.addEventListener('mousemove', onMouseMove);\r\n\r\n          svg.addEventListener('touchstart', onTouchStart);\r\n          svg.addEventListener('touchmove', onTouchMove);\r\n          svg.addEventListener('touchend', onTouchEnd);\r\n          svg.addEventListener('touchcancel', onTouchCancel);\r\n        });\r\n\r\n        function copyTouch(touch) {\r\n          var p = transform(touch.pageX, touch.pageY, svg, true);\r\n          p.id = touch.identifier; \r\n          return p;\r\n        }\r\n\r\n        function ongoingTouchIndexById(idToFind) {\r\n          for (var i = 0; i < ongoingTouches.length; i++) {\r\n            var id = ongoingTouches[i].id;\r\n            if (id === idToFind) {\r\n              return i;\r\n            }\r\n          }\r\n          return -1;\r\n        }\r\n\r\n        function onTouchStart(event) {\r\n          event.preventDefault();\r\n          var touches = event.changedTouches;\r\n          for (var i = 0; i < touches.length; i++) {\r\n            ongoingTouches.push(copyTouch(touches[i]));\r\n          }        \r\n\r\n          if (ongoingTouches.length > 1) {\r\n            rect.attr(getRect(ongoingTouches[0], ongoingTouches[1]));\r\n            show(rect);\r\n          }\r\n        }\r\n\r\n        function onTouchMove(event) {\r\n          var touches = event.changedTouches;        \r\n          for (var i = 0; i < touches.length; i++) {\r\n            var idx = ongoingTouchIndexById(touches[i].identifier);\r\n            ongoingTouches.splice(idx, 1, copyTouch(touches[i]));\r\n          }\r\n\r\n          if (ongoingTouches.length > 1) {\r\n            rect.attr(getRect(ongoingTouches[0], ongoingTouches[1]));\r\n            show(rect);\r\n          }\r\n        }\r\n\r\n        function onTouchCancel(event) {\r\n          event.preventDefault();        \r\n          removeTouches(event.changedTouches);        \r\n        }\r\n\r\n        function removeTouches(touches) {\r\n          for (var i = 0; i < touches.length; i++) {\r\n            var idx = ongoingTouchIndexById(touches[i].identifier);\r\n            if (idx >= 0) {\r\n              ongoingTouches.splice(idx, 1);\r\n            } \r\n          }\r\n        }\r\n\r\n        function onTouchEnd(event) {\r\n          event.preventDefault();\r\n\r\n          if (ongoingTouches.length > 1) {\r\n            zoomIn(getRect(ongoingTouches[0], ongoingTouches[1]));\r\n          }\r\n          removeTouches(event.changedTouches);\r\n          hide(rect);\r\n        }\r\n\r\n        function onMouseDown(event) {\r\n          if (event.button === 0) {\r\n            downPosition = position(event, svg);\r\n            rect.attr(getRect(downPosition, downPosition));\r\n            show(rect);\r\n            event.preventDefault();\r\n          }\r\n        }\r\n\r\n        var reset = function () {\r\n          chart.options.axisX.highLow = null;\r\n          chart.options.axisY.highLow = null;\r\n          chart.update(chart.data, chart.options);\r\n        };\r\n\r\n        function onMouseUp(event) {\r\n          if (event.button === 0) {\r\n            var box = getRect(downPosition, position(event, svg));\r\n            zoomIn(box);\r\n\r\n            downPosition = null;\r\n            hide(rect);\r\n            event.preventDefault();\r\n          }\r\n          else if (options.resetOnRightMouseBtn && event.button === 2) {\r\n            reset();\r\n            event.preventDefault();\r\n          }\r\n        }\r\n\r\n        function zoomIn(rect) {\r\n          if (rect.width > 5 && rect.height > 5) {\r\n              var x1 = rect.x - chartRect.x1;\r\n              var x2 = x1 + rect.width;\r\n              var y2 = chartRect.y1 - rect.y;\r\n              var y1 = y2 - rect.height;\r\n\r\n              chart.options.axisX.highLow = { low: project(x1, axisX), high: project(x2, axisX) };\r\n              chart.options.axisY.highLow = { low: project(y1, axisY), high: project(y2, axisY) };\r\n\r\n              chart.update(chart.data, chart.options);\r\n              onZoom && onZoom(chart, reset);\r\n            }\r\n        }\r\n\r\n        function onMouseMove(event) {\r\n          if (downPosition) {\r\n            var point = position(event, svg);\r\n            rect.attr(getRect(downPosition, point));\r\n            event.preventDefault();\r\n          }\r\n        }\r\n      };\r\n\r\n    };\r\n\r\n    function hide(rect) {\r\n      rect.attr({ style: 'display:none' });\r\n    }\r\n\r\n    function show(rect) {\r\n      rect.attr({ style: 'display:block' });\r\n    }\r\n\r\n    function getRect(firstPoint, secondPoint) {\r\n      var x = firstPoint.x;\r\n      var y = firstPoint.y;\r\n      var width = secondPoint.x - x;\r\n      var height = secondPoint.y - y;\r\n      if (width < 0) {\r\n        width = -width;\r\n        x = secondPoint.x;\r\n      }\r\n      if (height < 0) {\r\n        height = -height;\r\n        y = secondPoint.y;\r\n      }\r\n      return {\r\n        x: x,\r\n        y: y,\r\n        width: width,\r\n        height: height\r\n      };\r\n    }\r\n\r\n    function position(event, svg) {\r\n      var x = event.layerX;\r\n      var y = event.layerY;\r\n      return transform(x, y, svg);\r\n    }\r\n\r\n    function transform(x, y, svgElement, screen) {\r\n      svgElement = svgElement;\r\n      var svg = svgElement.tagName === 'svg' ? svgElement : svgElement.ownerSVGElement;\r\n      var matrix = screen ? svgElement.getScreenCTM() : svgElement.getCTM();\r\n      var point = svg.createSVGPoint();\r\n      point.x = x;\r\n      point.y = y;\r\n      point = point.matrixTransform(matrix.inverse());\r\n      return point || { x: 0, y: 0 };\r\n    }\r\n\r\n    function project(value, axis) {\r\n      var max = axis.bounds.max;\r\n      var min = axis.bounds.min;\r\n      if (axis.scale && axis.scale.type === 'log') {\r\n        var base = axis.scale.base;\r\n        return Math.pow(base,\r\n          value * baseLog(max / min, base) / axis.axisLength) * min;\r\n      }\r\n      return (value * axis.bounds.range / axis.axisLength) + min;\r\n    }\r\n\r\n    function baseLog(val, base) {\r\n      return Math.log(val) / Math.log(base);\r\n    }\r\n\r\n  } (window, document, Chartist));\n  return Chartist.plugins.zoom;\n\n}));\n"]}